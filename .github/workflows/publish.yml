name: Publish Package

on:
  push:
    tags:
      - 'v*'  # Aciona quando há push em tags
  workflow_dispatch:  # Permite acionar o fluxo manualmente

jobs:
  build-and-version:
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/dev') || startsWith(github.ref, 'refs/heads/main')
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller -r requirements.txt

      - name: Clean previous builds
        shell: pwsh
        run: |
          if (Test-Path build) { Remove-Item -Recurse -Force build }
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }

      - name: Generate Executable (No UPX)
        shell: pwsh
        run: |
          # Gera o executável com configurações de segurança
          pyinstaller --onefile `
                     --clean `
                     --add-data "assets/*;assets/" `
                     --noupx `
                     --uac-admin `
                     --name=DeepSeek-Tool-${{ github.ref_name }} `
                     --noconfirm `
                     main.py

      - name: Unblock Executable
        shell: pwsh
        run: |
          $exePath = Join-Path $env:GITHUB_WORKSPACE "dist\DeepSeek-Tool-${{ github.ref_name }}.exe"
          if (Test-Path $exePath) {
            # Desbloqueando e ajustando permissões
            Unblock-File -Path $exePath
            icacls $exePath /grant Everyone:F
            Write-Output "Executável desbloqueado e permissões ajustadas: $exePath"
          } else {
            Write-Error "Executável não encontrado: $exePath"
          }

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DeepSeek-Tool-${{ github.ref_name }}
          path: dist/